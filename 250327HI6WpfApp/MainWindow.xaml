<Window x:Class="_250327HI6WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:views="clr-namespace:_250327HI6WpfApp.Views"
        xmlns:viewmodels="clr-namespace:_250327HI6WpfApp.ViewModels"
        Title="ARA Hi6 Robot Control" Height="600" Width="800">


    <Window.Resources>
        <DataTemplate DataType="{x:Type viewmodels:MainViewModel}">
            <views:MainView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:ControlViewModel}">
            <views:ControlView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:SettingsViewModel}">
            <views:SettingsView />
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!-- 상단 영역 -->
        <Border Grid.Row="0" Background="#2C3E50" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <!-- 로고 영역 -->
                    <ColumnDefinition Width="*" />
                    <!-- 제목 영역 -->
                    <ColumnDefinition Width="Auto" />
                    <!-- 상태 표시 영역 -->
                </Grid.ColumnDefinitions>

                <!-- 회사 로고 이미지 -->
                <Image Grid.Column="0" Source="Resources/Images/company_logo.png" 
               Height="50" Margin="0,0,15,0" VerticalAlignment="Center" />

                <!-- 제목 텍스트 -->
                <TextBlock Grid.Column="1" Text="Hi6 Robot Control System" 
                   FontSize="24" Foreground="White" HorizontalAlignment="Center" 
                   VerticalAlignment="Center" />

                <!-- 로봇 상태 표시 영역 -->
                <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="10,0,0,0">
                    <!-- 로봇 기동 상태 표시 -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,15,0">
                        <TextBlock Text="로봇 상태:" Foreground="White" VerticalAlignment="Center" Margin="0,0,5,0"/>
                        <Ellipse Width="20" Height="20" Margin="0,0,5,0" VerticalAlignment="Center">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Fill" Value="Gray"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MainViewModel.IsRobotRunning}" Value="True">
                                            <Setter Property="Fill" Value="LimeGreen"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                        <TextBlock VerticalAlignment="Center" Foreground="White">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="정지"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MainViewModel.IsRobotRunning}" Value="True">
                                            <Setter Property="Text" Value="기동 중"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                    <!-- 원격 모드 상태 표시 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="원격 모드:" Foreground="White" VerticalAlignment="Center" Margin="0,0,5,0"/>
                        <Ellipse Width="20" Height="20" Margin="0,0,5,0" VerticalAlignment="Center">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Fill" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MainViewModel.IsRemoteMode}" Value="True">
                                            <Setter Property="Fill" Value="LimeGreen"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                        <TextBlock VerticalAlignment="Center" Foreground="White">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="비활성"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MainViewModel.IsRemoteMode}" Value="True">
                                            <Setter Property="Text" Value="활성"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </Border>
        <!-- 중앙 콘텐츠 영역 -->
        <ContentControl Grid.Row="1" Content="{Binding CurrentViewModel}" Margin="10" />
        <!-- 하단 네비게이션 영역 -->
        <!-- MainWindow.xaml의 하단 네비게이션 영역 수정 -->
        <Border Grid.Row="2" Background="#2C3E50" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- 기존 네비게이션 버튼 -->
                <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button Content="메인 화면" Command="{Binding NavigateMainCommand}" 
                    Width="100" Height="50" Margin="5" Style="{StaticResource NavButtonStyle}" />
                    <Button Content="컨트롤" Command="{Binding NavigateControlCommand}" 
                    Width="100" Height="50" Margin="5" Style="{StaticResource NavButtonStyle}" />
                    <Button Content="설정" Command="{Binding NavigateSettingsCommand}" 
                    Width="100" Height="50" Margin="5" Style="{StaticResource NavButtonStyle}" />
                </StackPanel>

                <!-- 비상정지 버튼 -->
                <Button Grid.Column="1" Content="비상정지" Command="{Binding EmergencyStopCommand}" 
                Width="120" Height="60" Margin="5" 
                Background="Red" Foreground="White" FontWeight="Bold">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="20"/>
                        </Style>
                    </Button.Resources>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                            CornerRadius="10" 
                            BorderThickness="2" 
                            BorderBrush="White" Margin="-301,0,0,0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Red" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="DarkRed" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#FF500000" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Border>
    </Grid>
</Window>